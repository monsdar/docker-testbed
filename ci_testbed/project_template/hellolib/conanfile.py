from conans import ConanFile, CMake, tools

class HelloConan(ConanFile):
    name = "hellolib_%%NAME%%"
    version = "1.0.0"
    description = "Autogenerated sample library"
    settings = "os", "compiler", "build_type", "arch"
    options = {"shared": [True, False]}
    default_options = {"shared": True}
    generators = "cmake"
    exports_sources="hellolib_%%NAME%%/hello.h", "hello.cpp", "CMakeLists.txt"

    def requirements(self):
        pass
    
    def build(self):
        cmake = CMake(self)
        cmake.configure(source_folder=".")
        cmake.build()

    def package(self):
        self.copy("hellolib_%%NAME%%/*.h", dst="include")
        self.copy("*hello.lib", dst="lib", keep_path=False)
        self.copy("*.dll", dst="bin", keep_path=False)
        self.copy("*.so", dst="lib", keep_path=False)
        self.copy("*.dylib", dst="lib", keep_path=False)
        self.copy("*.a", dst="lib", keep_path=False)

    def package_info(self):
        self.cpp_info.libs = ["hellolib_%%NAME%%"]
